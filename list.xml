<!-- -------------------MAIN LIST------------------- -->
<item>
	<name>[COLOR orchid]Debrid Links:[/COLOR] Sites A-Z</name>
	<link>$doregex[sites]</link>
	<thumbnail></thumbnail>
	<regex>
		<name>sites</name>
		<listrepeat>
			<![CDATA[
        <title>[sites.param2]</title><link>$doregex[makelist]</link><thumbnail></thumbnail>
]]>
		</listrepeat>
		<expres>
			<![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m,url = ''):
    from resources.lib.modules import client,workers
    import re,xbmc,xbmcgui
    def cleanup(s):
        return re.sub('&#(\d+);', '', s)    
    class page:
        def run(self, r):
            threads = [] ; self.r = [] ; r = [(r.index(i)+1, i) for i in r]
            for i in r: threads.append(workers.Thread(self.request, i))
            [i.start() for i in threads] ; [i.join() for i in threads]
            return ''.join([str(i[1]) for i in sorted(self.r, key=lambda x: x[0])])
        def request(self, i):
            self.r += [(i[0], client.request(i[1]))]

    url = 'https://www.naughtyblog.org/sites/page/'
    u = []
    for i in range(1, 10): u += [url + str(i) + '/']
    u = page().run(u)
    r = re.findall('(?s)<li><a href="([^"]*)" title="([^"]*)', u)
    return r
]]>
		</expres>
		<page></page>
	</regex>
	<regex>
		<name>makelist</name>
		<listrepeat>
			<![CDATA[
        <title>[makelist.param3]</title><link>$doregex[playurl]</link><thumbnail>[makelist.param2]</thumbnail>
]]>
		</listrepeat>
		<expres>
			<![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m,url = ''):
    from resources.lib.modules import client,workers
    import re,xbmc,xbmcgui
    def unescape(s):
        return re.sub('&#(\d+);', '', s)    
    class page:
        def run(self, r):
            threads = [] ; self.r = [] ; r = [(r.index(i)+1, i) for i in r]
            for i in r: threads.append(workers.Thread(self.request, i))
            [i.start() for i in threads] ; [i.join() for i in threads]
            return ''.join([str(i[1]) for i in sorted(self.r, key=lambda x: x[0])])
        def request(self, i):
            self.r += [(i[0], client.request(i[1]))]       

    url = '[sites.param1]page/'
    u = []
    for i in range(1, 10): u += [url + str(i) + '/']
    u = page().run(u)
    r = re.findall('class="herecky"(?:.*)href="([^"]*)(?:.*)src="([^"]*)(?:\N*)\n(?:.*)<strong>([^"]*)<\/strong>', u)
    r = [(i[0],i[1],unescape(i[2])) for i in r if 'SITERIP' not in i[2]]
    return r
]]>
		</expres>
		<page></page>
	</regex>
	<regex>
		<name>playurl</name>
		<expres>
			<![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m,url = ''):
    from resources.lib.modules import client
    import re
    url = '[makelist.param1]'
    from resources.lib.modules import control
    adultresolver = control.cdnImport('https://raw.githubusercontent.com/posadka/pinkhat/main/pinkhat/adultresolver.xml', 'adultresolver')
    adultresolver = adultresolver.streamer()
    url = adultresolver.resolve(url)
    r = url
    r0 = [i[1] for i in r] ; r1 = ['[COLOR orchid]DEBRID-[/COLOR]'+i[0].upper() for i in r]

    if len(r1) > 1:
        label = control.infoLabel('listitem.label')
        select = control.dialog.select(label.upper(), r1)
        if select == -1: return
        link = r0[select]
    else:
        link = r0[0]
    return link
]]>
		</expres>
		<page></page>
	</regex>
</item>

<!-- -------------------RECENT LIST------------------- -->
<item>
    <name>[COLOR orchid]Debrid Links:[/COLOR] Recent Videos</name>
    <link>$doregex[makelist]</link>
    <thumbnail></thumbnail>
    <regex>
        <name>makelist</name>
        <listrepeat>
            <![CDATA[
        <title>[makelist.param3]</title><link>$doregex[playurl]</link><thumbnail>[makelist.param2]</thumbnail>
]]>
        </listrepeat>
        <expres>
            <![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m,url = ''):
    from resources.lib.modules import client,workers
    import re,xbmc,xbmcgui
    def cleanup(s):
        return re.sub('&#(\d+);', '', s)    
    class page:
        def run(self, r):
            threads = [] ; self.r = [] ; r = [(r.index(i)+1, i) for i in r]
            for i in r: threads.append(workers.Thread(self.request, i))
            [i.start() for i in threads] ; [i.join() for i in threads]
            return ''.join([str(i[1]) for i in sorted(self.r, key=lambda x: x[0])])
        def request(self, i):
            self.r += [(i[0], client.request(i[1]))]

    url = 'https://www.naughtyblog.org/page/'
    u = []
    for i in range(1, 10): u += [url + str(i) + '/']
    u = page().run(u)
    r = re.findall('(?s)id="post-index-content(?:[^=]*)=(?:[^=]*)=(?:[^=]*)="([^"]*)(?:[^=]*)=(?:[^=]*)="(?:[^:]*)([^"]*)(?:[^=]*)=(?:[^=]*)=(?:[^=]*)="([^"]*)', u)
    r = [(i[0],'https'+i[1], cleanup(i[2])) for i in r if 'SITERIP' not in i[2] if 'goo' not in i[2] if 'Leak' not in i[2] if 'Collection' not in i[2]]
    return r
]]>
        </expres>
        <page></page>
    </regex>
    <regex>
        <name>playurl</name>
        <expres>
            <![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m,url = ''):
    from resources.lib.modules import client
    import re
    url = '[makelist.param1]'
    from resources.lib.modules import control
    adultresolver = control.cdnImport('https://raw.githubusercontent.com/posadka/pinkhat/main/pinkhat/adultresolver.xml', 'adultresolver')
    adultresolver = adultresolver.streamer()
    url = adultresolver.resolve(url)
    r = url
    r0 = [i[1] for i in r] ; r1 = ['[COLOR orchid]DEBRID-[/COLOR]'+i[0].upper() for i in r]

    if len(r1) > 1:
        label = control.infoLabel('listitem.label')
        select = control.dialog.select(label.upper(), r1)
        if select == -1: return
        link = r0[select]
    else:
        link = r0[0]
    return link
]]>
        </expres>
        <page></page>
    </regex>
</item>

<!-- -------------------POPULAR LIST------------------- -->
<item>
    <name>[COLOR orchid]Debrid Links:[/COLOR] Popular This Week</name>
    <link>$doregex[makelist]</link>
    <thumbnail></thumbnail>
    <regex>
        <name>makelist</name>
        <listrepeat>
            <![CDATA[
        <title>[makelist.param3]</title><link>$doregex[playurl]</link><thumbnail>[makelist.param2]</thumbnail>
]]>
        </listrepeat>
        <expres>
            <![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m,url = ''):
    from resources.lib.modules import client,workers
    import re,xbmc,xbmcgui
    def cleanup(s):
        return re.sub('&#(\d+);', '', s)    
    class page:
        def run(self, r):
            threads = [] ; self.r = [] ; r = [(r.index(i)+1, i) for i in r]
            for i in r: threads.append(workers.Thread(self.request, i))
            [i.start() for i in threads] ; [i.join() for i in threads]
            return ''.join([str(i[1]) for i in sorted(self.r, key=lambda x: x[0])])
        def request(self, i):
            self.r += [(i[0], client.request(i[1]))]

    url = 'https://nablog.org/popular-videos-weekly/page/'
    u = []
    for i in range(1, 10): u += [url + str(i) + '/']
    u = page().run(u)
    r = re.findall('(?s)id="post-index-content(?:[^=]*)=(?:[^=]*)=(?:[^=]*)="([^"]*)(?:[^=]*)=(?:[^=]*)="(?:[^:]*)([^"]*)(?:[^=]*)=(?:[^=]*)=(?:[^=]*)="([^"]*)', u)
    r = [(i[0],'https'+i[1], cleanup(i[2])) for i in r if 'SITERIP' not in i[2] if 'goo' not in i[2] if 'Leak' not in i[2] if 'Collection' not in i[2]]
    return r
]]>
        </expres>
        <page></page>
    </regex>
    <regex>
        <name>playurl</name>
        <expres>
            <![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m,url = ''):
    from resources.lib.modules import client
    import re
    url = '[makelist.param1]'
    from resources.lib.modules import control
    adultresolver = control.cdnImport('https://raw.githubusercontent.com/posadka/pinkhat/main/pinkhat/adultresolver.xml', 'adultresolver')
    adultresolver = adultresolver.streamer()
    url = adultresolver.resolve(url)
    r = url
    r0 = [i[1] for i in r] ; r1 = ['[COLOR orchid]DEBRID-[/COLOR]'+i[0].upper() for i in r]

    if len(r1) > 1:
        label = control.infoLabel('listitem.label')
        select = control.dialog.select(label.upper(), r1)
        if select == -1: return
        link = r0[select]
    else:
        link = r0[0]
    return link
]]>
        </expres>
        <page></page>
    </regex>
</item>

<!-- -------------------MONTHLY LIST------------------- -->
<item>
    <name>[COLOR orchid]Debrid Links:[/COLOR] Popular This Month</name>
    <link>$doregex[makelist]</link>
    <thumbnail></thumbnail>
    <regex>
        <name>makelist</name>
        <listrepeat>
            <![CDATA[
        <title>[makelist.param3]</title><link>$doregex[playurl]</link><thumbnail>[makelist.param2]</thumbnail>
]]>
        </listrepeat>
        <expres>
            <![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m,url = ''):
    from resources.lib.modules import client,workers
    import re,xbmc,xbmcgui
    def cleanup(s):
        return re.sub('&#(\d+);', '', s)    
    class page:
        def run(self, r):
            threads = [] ; self.r = [] ; r = [(r.index(i)+1, i) for i in r]
            for i in r: threads.append(workers.Thread(self.request, i))
            [i.start() for i in threads] ; [i.join() for i in threads]
            return ''.join([str(i[1]) for i in sorted(self.r, key=lambda x: x[0])])
        def request(self, i):
            self.r += [(i[0], client.request(i[1]))]

    url = 'https://nablog.org/popular-videos-monthly/page/'
    u = []
    for i in range(1, 10): u += [url + str(i) + '/']
    u = page().run(u)
    r = re.findall('(?s)id="post-index-content(?:[^=]*)=(?:[^=]*)=(?:[^=]*)="([^"]*)(?:[^=]*)=(?:[^=]*)="(?:[^:]*)([^"]*)(?:[^=]*)=(?:[^=]*)=(?:[^=]*)="([^"]*)', u)
    r = [(i[0],'https'+i[1], cleanup(i[2])) for i in r if 'SITERIP' not in i[2] if 'goo' not in i[2] if 'Leak' not in i[2] if 'Collection' not in i[2]]
    return r
]]>
        </expres>
        <page></page>
    </regex>
    <regex>
        <name>playurl</name>
        <expres>
            <![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m,url = ''):
    from resources.lib.modules import client
    import re
    url = '[makelist.param1]'
    from resources.lib.modules import control
    adultresolver = control.cdnImport('https://raw.githubusercontent.com/posadka/pinkhat/main/pinkhat/adultresolver.xml', 'adultresolver')
    adultresolver = adultresolver.streamer()
    url = adultresolver.resolve(url)
    r = url
    r0 = [i[1] for i in r] ; r1 = ['[COLOR orchid]DEBRID-[/COLOR]'+i[0].upper() for i in r]

    if len(r1) > 1:
        label = control.infoLabel('listitem.label')
        select = control.dialog.select(label.upper(), r1)
        if select == -1: return
        link = r0[select]
    else:
        link = r0[0]
    return link
]]>
        </expres>
        <page></page>
    </regex>
</item>
